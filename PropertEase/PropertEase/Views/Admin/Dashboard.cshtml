@using Application.Interfaces
@using Application
@inject IPropertyService propertyService
@inject IUserService userService
@inject ILocationService locationService
@model UserDTO
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Dashboard | Admin";
}

<body>
    <div class="main-content">
        <style>
            .card {
                border: none;
                border-radius: 8px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

                .card i {
                    font-size: 2rem;
                    color: #EA580C;
                }

            .dashboard-title {
                font-weight: 600;
                color: #343a40;
            }

            .chart-container {
                padding: 20px;
                background-color: #fff;
                border-radius: 8px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

        </style>
        <h2 class="dashboard-title mb-4" style="font-family:'PP Hatton medium';">Dashboard Overview</h2>

        <!-- Dashboard Stats -->
        <div class="row g-4">
            <div class="col-md-3">
                <div class="card p-4 text-center">
                    <i class="fas fa-users"></i>
                    <h5 class="mt-3">Users</h5>
                    <h4>@((await userService.GetAllUsersAsync()).Count())</h4>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card p-4 text-center">
                    <i class="fas fa-user-tie"></i>
                    <h5 class="mt-3">Agents</h5>
                    <h4>@((await userService.GetAgentsAsync()).Count())</h4>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card p-4 text-center">
                    <i class="fas fa-building"></i>
                    <h5 class="mt-3">Active Properties</h5>
                    <h4>@((await propertyService.GetAllAsync()).Count())</h4>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card p-4 text-center">
                    <i class="fas fa-chart-line"></i>
                    <h5 class="mt-3">Residential</h5>
                    <h4>@((await propertyService.GetAllAsync()).Where(p=>p.Category.CategoryId == 1).ToList().Count())</h4>
                </div>
            </div>
        </div>

        <!-- Chart -->
        <div class="chart-container mt-5">
            <h5 class="mb-3">Monthly Activity</h5>
            <canvas id="activityChart"></canvas>
        </div>
        <div class="row g-4 mt-4 mb-4">
            <div class="col-md-3">
                <div class="card p-4 text-center">
                    <i class="fas fa-house"></i>
                    <h5 class="mt-3">Houses</h5>
                    <h4>@((await propertyService.GetAllAsync()).Where(p => p.PropertyType.PropertyTypeId == 1).ToList().Count())</h4>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card p-4 text-center">
                    <i class="fas fa-drafting-compass"></i>
                    <h5 class="mt-3">Plots</h5>
                    <h4>@((await propertyService.GetAllAsync()).Where(p => p.PropertyType.PropertyTypeId == 3).ToList().Count())</h4>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card p-4 text-center">
                    <i class="fas fa-location-dot"></i>
                    <h5 class="mt-3">Lahore</h5>
                    <h4>@((await propertyService.GetAllAsync()).Where(p => p.Location.City== "Lahore").ToList().Count())</h4>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card p-4 text-center">
                    <i class="fas fa-building"></i>
                    <h5 class="mt-3">Islamabad</h5>
                    <h4>@((await propertyService.GetAllAsync()).Where(p => p.Location.City== "Islamabad").ToList().Count())</h4>
                </div>
            </div>
        </div>
    </div>
        @section Scripts {
        <script>
            const ctx = document.getElementById('activityChart').getContext('2d');
            const activityChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ['January', 'February', 'March', 'April', 'May', 'June'],
                    datasets: [{
                        label: 'Properties Added',
                        data: [12, 19, 3, 5, 2, 3],
                        borderColor: '#EA580C',
                        borderWidth: 2,
                        fill: false,
                        tension: 0.4,
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top',
                        }
                    },
                    scales: {
                        x: {
                            beginAtZero: true
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        </script>
        }
</body>
